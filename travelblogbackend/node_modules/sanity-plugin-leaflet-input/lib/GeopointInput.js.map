{"version":3,"sources":["../src/GeopointInput.js"],"names":["Leaflet","Icon","Default","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","EMPTY_MARKERS","DEFAULT_ZOOM","DEFAULT_CENTER","clickToMove","window","matchMedia","matches","getKeyPlaceholder","url","match","key","isMissingMapboxApiKey","tileConfig","hasStaticAccessKey","test","keyPlaceholder","includes","getHelpText","value","lat","GeopointInput","React","forwardRef","props","ref","type","level","markers","onChange","typeOptions","options","leaflet","config","tileLayer","center","defaultLocation","defaultZoom","zoom","setZoom","markerRef","title","description","setMarkerLocation","latLng","PatchEvent","from","_type","name","lng","handleMapClick","evt","latlng","handleMarkerDragEnd","current","leafletElement","getLatLng","handleUnsetMarker","onZoom","target","getZoom","leafStyles","styles","map","readOnly","helpText","propTypes","PropTypes","shape","string","isRequired","number","func","bool","maxZoom","attribution","accessToken","arrayOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {createRef, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport Leaflet from 'leaflet'\nimport {Map, TileLayer, Marker, ZoomControl, Popup} from 'react-leaflet'\nimport Button from 'part:@sanity/components/buttons/default'\nimport Fieldset from 'part:@sanity/components/fieldsets/default'\nimport {PatchEvent, set, setIfMissing, unset} from 'part:@sanity/form-builder/patch-event'\nimport config from 'config:leaflet-input'\nimport leafStyles from './Leaflet.css'\nimport styles from './GeopointInput.css'\nimport GeoSearchInput from './GeoSearchPlugin'\nimport MapBoxAccessTokenMissing from './MapBoxAccessTokenMissing'\n\nLeaflet.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n})\n\nconst EMPTY_MARKERS = []\nconst DEFAULT_ZOOM = 13\nconst DEFAULT_CENTER = [37.779048, -122.415214]\n\nconst clickToMove =\n  typeof window !== 'undefined' &&\n  typeof window.matchMedia === 'function' &&\n  !matchMedia('(pointer:fine)').matches\n\nfunction getKeyPlaceholder(url) {\n  const [, key] = url.match(/access_token=\\{(.*?)\\}/) || []\n  return key\n}\n\nfunction isMissingMapboxApiKey(tileConfig) {\n  const url = tileConfig.url || ''\n  const hasStaticAccessKey = /accessToken=[^{]/.test(url)\n  const keyPlaceholder = !hasStaticAccessKey && getKeyPlaceholder(url)\n  return url.includes('tiles.mapbox.com') && keyPlaceholder && !tileConfig[keyPlaceholder]\n}\n\nfunction getHelpText(value) {\n  if (!value || !value.lat) {\n    return `Click on map to set location`\n  }\n\n  if (clickToMove) {\n    return `Click on map to change location. Click marker to remove it.`\n  }\n\n  return `Drag marker to change location. Click marker to remove it.`\n}\n\n// eslint-disable-next-line prefer-arrow-callback\nconst GeopointInput = React.forwardRef(function GeopointInput(props, ref) {\n  const {type, level, value, markers, onChange} = props\n  const typeOptions = type.options?.leaflet || {}\n  const tileConfig = {...config.tileLayer, ...typeOptions.tileLayer}\n  const center = value || typeOptions.defaultLocation || config.defaultLocation || DEFAULT_CENTER\n  const [zoom, setZoom] = useState(typeOptions.defaultZoom || config.defaultZoom || DEFAULT_ZOOM)\n  const markerRef = createRef()\n\n  if (isMissingMapboxApiKey(tileConfig)) {\n    return (\n      <Fieldset legend={type.title} description={type.description} markers={markers} label={level}>\n        <MapBoxAccessTokenMissing />\n      </Fieldset>\n    )\n  }\n\n  function setMarkerLocation(latLng) {\n    onChange(\n      PatchEvent.from([\n        setIfMissing({\n          _type: type.name,\n        }),\n        set(latLng.lat, ['lat']),\n        set(latLng.lng, ['lng']),\n      ])\n    )\n  }\n\n  function handleMapClick(evt) {\n    if (!clickToMove && value && value.lat) {\n      return\n    }\n\n    setMarkerLocation(evt.latlng)\n  }\n\n  function handleMarkerDragEnd() {\n    if (!markerRef.current) {\n      return\n    }\n\n    setMarkerLocation(markerRef.current.leafletElement.getLatLng())\n  }\n\n  function handleUnsetMarker() {\n    onChange(PatchEvent.from(unset()))\n  }\n\n  function onZoom(evt) {\n    setZoom(evt.target.getZoom())\n  }\n\n  return (\n    <Fieldset legend={type.title} description={type.description} markers={markers} level={level}>\n      <div className={leafStyles.leaflet}>\n        <Map\n          ref={ref}\n          className={styles.map}\n          center={center}\n          zoom={zoom}\n          zoomControl={false}\n          onZoomEnd={onZoom}\n          scrollWheelZoom={false}\n          onClick={handleMapClick}\n          trackResize\n        >\n          <TileLayer {...tileConfig} />\n\n          {value && value.lat && (\n            <Marker\n              draggable={!type.readOnly}\n              onDragend={handleMarkerDragEnd}\n              position={center}\n              ref={markerRef}\n            >\n              {!type.readOnly && (\n                <Popup>\n                  <Button color=\"danger\" inverted onClick={handleUnsetMarker}>\n                    Remove point\n                  </Button>\n                </Popup>\n              )}\n            </Marker>\n          )}\n\n          <GeoSearchInput onSelectLocation={setMarkerLocation} />\n\n          <ZoomControl position=\"topright\" />\n        </Map>\n\n        <p className={styles.helpText}>{getHelpText(value)}</p>\n      </div>\n    </Fieldset>\n  )\n})\n\nGeopointInput.propTypes = {\n  value: PropTypes.shape({\n    _type: PropTypes.string.isRequired,\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n  }),\n  level: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    readOnly: PropTypes.bool,\n    options: PropTypes.shape({\n      leaflet: PropTypes.shape({\n        tileLayer: PropTypes.shape({\n          url: PropTypes.string.isRequired,\n          maxZoom: PropTypes.number,\n          attribution: PropTypes.string,\n          accessToken: PropTypes.string,\n        }),\n        defaultLocation: PropTypes.shape({\n          lat: PropTypes.number,\n          lng: PropTypes.number,\n        }),\n        defaultZoom: PropTypes.number,\n      }),\n    }),\n  }).isRequired,\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n    })\n  ),\n}\n\nGeopointInput.defaultProps = {\n  value: undefined,\n  markers: EMPTY_MARKERS,\n}\n\nexport default GeopointInput\n"],"file":"GeopointInput.js"}